// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        v3.12.4
// source: proto/measure/measure.proto

package measure

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PathLatencyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          []int32                `protobuf:"varint,1,rep,packed,name=path,proto3" json:"path,omitempty"`
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Interval      int32                  `protobuf:"varint,3,opt,name=interval,proto3" json:"interval,omitempty"` // in ms
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PathLatencyRequest) Reset() {
	*x = PathLatencyRequest{}
	mi := &file_proto_measure_measure_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PathLatencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathLatencyRequest) ProtoMessage() {}

func (x *PathLatencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_measure_measure_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathLatencyRequest.ProtoReflect.Descriptor instead.
func (*PathLatencyRequest) Descriptor() ([]byte, []int) {
	return file_proto_measure_measure_proto_rawDescGZIP(), []int{0}
}

func (x *PathLatencyRequest) GetPath() []int32 {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *PathLatencyRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PathLatencyRequest) GetInterval() int32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

type PathLatencyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        int32                  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Latency       int32                  `protobuf:"varint,2,opt,name=latency,proto3" json:"latency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PathLatencyResponse) Reset() {
	*x = PathLatencyResponse{}
	mi := &file_proto_measure_measure_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PathLatencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathLatencyResponse) ProtoMessage() {}

func (x *PathLatencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_measure_measure_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathLatencyResponse.ProtoReflect.Descriptor instead.
func (*PathLatencyResponse) Descriptor() ([]byte, []int) {
	return file_proto_measure_measure_proto_rawDescGZIP(), []int{1}
}

func (x *PathLatencyResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PathLatencyResponse) GetLatency() int32 {
	if x != nil {
		return x.Latency
	}
	return 0
}

type ProjectedPathLatencyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Start         int32                  `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End           int32                  `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectedPathLatencyRequest) Reset() {
	*x = ProjectedPathLatencyRequest{}
	mi := &file_proto_measure_measure_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectedPathLatencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectedPathLatencyRequest) ProtoMessage() {}

func (x *ProjectedPathLatencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_measure_measure_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectedPathLatencyRequest.ProtoReflect.Descriptor instead.
func (*ProjectedPathLatencyRequest) Descriptor() ([]byte, []int) {
	return file_proto_measure_measure_proto_rawDescGZIP(), []int{2}
}

func (x *ProjectedPathLatencyRequest) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ProjectedPathLatencyRequest) GetEnd() int32 {
	if x != nil {
		return x.End
	}
	return 0
}

type ProjectedPathLatencyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        int32                  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Latency       float64                `protobuf:"fixed64,2,opt,name=latency,proto3" json:"latency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectedPathLatencyResponse) Reset() {
	*x = ProjectedPathLatencyResponse{}
	mi := &file_proto_measure_measure_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectedPathLatencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectedPathLatencyResponse) ProtoMessage() {}

func (x *ProjectedPathLatencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_measure_measure_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectedPathLatencyResponse.ProtoReflect.Descriptor instead.
func (*ProjectedPathLatencyResponse) Descriptor() ([]byte, []int) {
	return file_proto_measure_measure_proto_rawDescGZIP(), []int{3}
}

func (x *ProjectedPathLatencyResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ProjectedPathLatencyResponse) GetLatency() float64 {
	if x != nil {
		return x.Latency
	}
	return 0
}

var File_proto_measure_measure_proto protoreflect.FileDescriptor

var file_proto_measure_measure_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2f,
	0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x22, 0x5a, 0x0a, 0x12, 0x50, 0x61, 0x74, 0x68, 0x4c, 0x61,
	0x74, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x22, 0x47, 0x0a, 0x13, 0x50, 0x61, 0x74, 0x68, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x45, 0x0a, 0x1b, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x74, 0x68, 0x4c, 0x61, 0x74, 0x65,
	0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65,
	0x6e, 0x64, 0x22, 0x50, 0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50,
	0x61, 0x74, 0x68, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61,
	0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x6c, 0x61, 0x74,
	0x65, 0x6e, 0x63, 0x79, 0x32, 0xba, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x12, 0x4a, 0x0a, 0x0b, 0x50, 0x61, 0x74, 0x68, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x1b, 0x2e, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x4c, 0x61,
	0x74, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x4c, 0x61, 0x74, 0x65, 0x6e,
	0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x12,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x61, 0x74, 0x68, 0x4c, 0x61, 0x74, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x24, 0x2e, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x74, 0x68, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x74, 0x68,
	0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x44, 0x72, 0x43, 0x30, 0x6e, 0x73, 0x30, 0x6c, 0x65, 0x2f, 0x6e, 0x65, 0x74, 0x2d, 0x70, 0x65,
	0x72, 0x66, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x3b, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_measure_measure_proto_rawDescOnce sync.Once
	file_proto_measure_measure_proto_rawDescData = file_proto_measure_measure_proto_rawDesc
)

func file_proto_measure_measure_proto_rawDescGZIP() []byte {
	file_proto_measure_measure_proto_rawDescOnce.Do(func() {
		file_proto_measure_measure_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_measure_measure_proto_rawDescData)
	})
	return file_proto_measure_measure_proto_rawDescData
}

var file_proto_measure_measure_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_measure_measure_proto_goTypes = []any{
	(*PathLatencyRequest)(nil),           // 0: measure.PathLatencyRequest
	(*PathLatencyResponse)(nil),          // 1: measure.PathLatencyResponse
	(*ProjectedPathLatencyRequest)(nil),  // 2: measure.ProjectedPathLatencyRequest
	(*ProjectedPathLatencyResponse)(nil), // 3: measure.ProjectedPathLatencyResponse
}
var file_proto_measure_measure_proto_depIdxs = []int32{
	0, // 0: measure.Measure.PathLatency:input_type -> measure.PathLatencyRequest
	2, // 1: measure.Measure.ProjectPathLatency:input_type -> measure.ProjectedPathLatencyRequest
	1, // 2: measure.Measure.PathLatency:output_type -> measure.PathLatencyResponse
	3, // 3: measure.Measure.ProjectPathLatency:output_type -> measure.ProjectedPathLatencyResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_measure_measure_proto_init() }
func file_proto_measure_measure_proto_init() {
	if File_proto_measure_measure_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_measure_measure_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_measure_measure_proto_goTypes,
		DependencyIndexes: file_proto_measure_measure_proto_depIdxs,
		MessageInfos:      file_proto_measure_measure_proto_msgTypes,
	}.Build()
	File_proto_measure_measure_proto = out.File
	file_proto_measure_measure_proto_rawDesc = nil
	file_proto_measure_measure_proto_goTypes = nil
	file_proto_measure_measure_proto_depIdxs = nil
}
